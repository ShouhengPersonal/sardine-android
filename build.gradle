buildscript {
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.2'
    }
}

repositories {
    mavenCentral()
    google()
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

android {
    compileSdk 34

    defaultConfig {
        minSdkVersion 15
        consumerProguardFiles 'proguard-rules.pro'
    }
    namespace "com.thegrizzlylabs.sardineandroid"

    def javaVersion = JavaVersion.VERSION_17
    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }
//    publishing {
//        singleVariant("release") {
//            withSourcesJar()
//        }
//    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    api 'com.squareup.okhttp3:okhttp:4.12.0'

    implementation('org.simpleframework:simple-xml:2.7.1') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }

    testImplementation 'junit:junit:4.13.2'
}
//fixme uncomment this for print deprecation info
//tasks.withType(JavaCompile) {
//    options.compilerArgs =
//            options.compilerArgs + ["-Xlint:deprecation", "-Xlint:unchecked"]
//}
//afterEvaluate {
//    publishing {
//        publications {
//            release(MavenPublication) {
//                afterEvaluate {
//                    from components.release
//                }
//            }
//        }
//    }
//}

ext {
    releaseVersion = '1.0.0'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.source
    exclude "**/R.class"
    exclude "**/BuildConfig.class"
}

publishing {
    // 定义发布什么
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.github.Shouheng88'
            artifactId 'sardine-android'
            version rootProject.ext.releaseVersion
            // Two artifacts, the `aar` and the sources
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact androidSourcesJar
            pom {
                // 构件名称，区别于 artifactId，可以理解为 artifactName
                name = 'sardine-android'
                // 构件描述
                description = 'Android UIX'
                // 构件主页
                url = 'https://github.com/ShouhengPersonal/sardine-android'
                // 许可证名称和地址
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                // 开发者信息
                developers {
                    developer {
                        name = 'ShouHeng'
                        email = 'shouheng2020@gmail.com'
                    }
                }
                // 版本控制仓库地址
                scm {
                    url = 'https://github.com/ShouhengPersonal/sardine-android'
                    connection = 'scm:git:github.com/ShouhengPersonal/sardine-android.git'
                    developerConnection = 'scm:git:ssh://git@github.com:ShouhengPersonal/sardine-android.git'
                }
                // A slightly hacky fix so that your POM will include any transitive dependencies
                // that your library builds upon
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    project.configurations.all { configuration ->
                        def name = configuration.name
                        if (name != "implementation" && name != "compile" && name != "api") {
                            return
                        }
                        println(configuration)
                        configuration.dependencies.each {
                            println(it)
                            if (it.name == "unspecified") {
                                // 忽略无法识别的
                                return
                            }
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                            if (name == "api" || name == "compile") {
                                dependencyNode.appendNode("scope", "compile")
                            } else { // implementation
                                dependencyNode.appendNode("scope", "runtime")
                            }
                        }
                    }
                }
            }
        }
    }
    // 定义发布到哪里
    repositories {
        maven {
            def releasesRepoUrl = "https://packages.aliyun.com/68198b2094317fd8828b9963/maven/2536676-release-u4sjzq"
            def snapshotsRepoUrl = "https://packages.aliyun.com/68198b2094317fd8828b9963/maven/2536676-snapshot-ncsket"
            // You only need this if you want to publish snapshots, otherwise just set the URL
            // to the release repo directly
            url = rootProject.ext.releaseVersion.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                // 这里就是之前在 issues.sonatype.org 注册的账号
                username '68198b0c1b10b4db7ef6ed97'
                password '5LaFD5oUoMDH'
            }
        }
    }
}

//signing {
//    sign publishing.publications
//}
